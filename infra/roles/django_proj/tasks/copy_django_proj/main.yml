---
- name: Run the equivalent of "apt-get update"
  become: true
  become_user: root
  ansible.builtin.apt:
    update_cache: true

- name: Copy Django project
  ansible.posix.synchronize:
    src: "{{ local_project_directory }}/backend/"
    dest: "/home/{{ owner }}/backend/"
    rsync_opts:
      - "--exclude={{ local_project_directory }}/backend/.venv"
      - "--exclude={{ local_project_directory }}/backend/db.sqlite3"

- name: Install pip3
  become: true
  become_user: root
  ansible.builtin.apt:
    name:
      - python3-pip
      - python3.8-venv
    state: present

- name: Install virtualenv via pip3
  become: true
  become_user: root
  ansible.builtin.pip:
    name: virtualenv
    executable: "{{ pip_executable }}"

- name: Install dependencies
  ansible.builtin.pip:
    requirements: "/home/{{ owner }}/backend/requirements.txt"
    virtualenv: "/home/{{ owner }}/backend/venv"

- name: Run Django server
  ansible.builtin.command:
    cmd: "nohup {{ virtual_env_python_interpreter }} {{ host_project_directory }}/manage.py runserver 0.0.0.0:8000 &"
  register: source_output
  changed_when: source_output.rc != 0
